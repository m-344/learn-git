#all commands start with 'git'
--version
add 
	* [stage all files] 
	. [stage the current file]
staus -s	[-s stand for short]
diff filename
	--staged [changes made but not yet commited]
q 	[quit git diff]
commit 	-m "message in presence tense"
	-v [opens in the editor with additional info about the commit]	
	-a [commit all changes]
	--amend [change the previous commit]
revert [ID of the commit]
config 		[check configuration for a particular parameter]
	-l 	[list all configuration parameters]
git config --local core.editor vim	[choose between --local or --global parameters]
ssh-keygen -t rsa -C "le.chat454@gmail.com" [generates an ssh key]
next step: copy the key from where it is stored and paste it to github
commandName --help


https://help.github.com/en/articles/configuring-a-remote-for-a-fork



cat filenName.extension [(read a file on the terminal] [GitBash] OR
	C:\Users\sapov>type .\.gitconfig [cmd]
branch branchName	[create a new branch]
branch 			[check on which branch I'm working on]
	-d brunchName 	[delete the branch]
checkout branchName 	[switch to another branch]
git checkout master -- fileName	[will overwrite with the version of the last commit]
merge braunchName
remote -v show		[show remote repositorie]
reset --soft HEAD~{number of commits}	[squashes the commits ~ merges them intoe]



tag "tagValue"
	-a [annotated] -m "message"
show "tagValue"

GItBash [same commands as Linux]
NAVIGATE FILE SYSTEM
ll
cd /l/Programmieren/cmd
ls [content of the folder]
pwd [full path of the current folder]

{In order to navigate to a different drive/directory you can do it in convenient way (instead of typing cd /e/Study/Codes), just type in cd[Space], and drag-and-drop your directory Codes with your mouse to git bash, hit [Enter].}

CREATE/DELETE
mkdir folderName
mv fileName folderName/   [move file to a folder]
mv folder/file . [move file from subdirectory to the current folder '.']
cp fileName copiedFileName
	-r "folder/path/to/copy"	"folder/destination/path"
rm fileName
	-r folderPath/


VI
Command MODE
vi newFileName [create new file]
i [switch to INSERT mode from COMMAND mode]
x 	[del character]
dd 	[del line]
:w write file
:q quite VI
:wq write file and quite

Insert mode
ESC [switch to COMMAND mode from INSERT mode]





CONTENT
cat test.txt [see the content]

help help commandName

TERMINAL
Arrows up/down [commands 	history]
